Project 3: A random walk in two dimensions


Write a program that simulate a random 2D walk with the same step size . 
Four directions are possible (N, E, S, W). Your program will involve two large integers, K = the number of random walks to be taken and N = the maximum number of steps in a single walk. Run your program with at least K >= 1000.

1. Find the average distance R to be from the origin point after N steps
    Assume that R has the asymptotic N dependence R~Na and estimate the exponent a.
2. Randomly place the "random walker" on a two-dimension lattice of L sites in a row (like a city with L+1 blocks in a row). 
Find the average distance D (or the average number of steps) to go to be out of the city limit. Is there a connection between D and L? Consider the problem as an unrestricted random walk when all directions have equal probability.
3. Bonus question. Consider the "random walker in a city" as a persistent random walk, i.e. on each step the walker can not step back but forward, left or right. What is different in this case comparing to the unrestricted random walk?